<project default="jar" name="Fireworks" basedir=".">
    <property name="build.dir" value="target"/>
    <property name="test.output.dir" value="${build.dir}/surefire-reports"/>
    <property name="shadow.lib.dir" value="./../core/target/"/>
    <property name="lib.dir" value="./../dependent-libs"/>
    <property name="resources.dir" value="src/main/images"/>
    <property name="main.src.dir" value="src/main/java"/>
    <property name="main.classes.dir" value="${build.dir}/classes"/>
    <property name="test.src.dir" value="src/test/java"/>
    <property name="test.classes.dir" value="${build.dir}/test-classes"/>
    <property name="idea_home" value="C:/Program Files/JetBrains/IntelliJ IDEA 5.0/"/>
	<echo>
This build(fireworks/build.xml) script is used to compile, test  fireworks project and 
build jar of fireworks project. If you want to build fireworks plugin for deployment, 
please run build script in the parent folder.

Please set the property 'idea_home' to point to your IntelliJ IDEA installation directory.
current value of 'idea_home' is: ${idea_home}
	</echo>

    <path id="main.classpath">
        <fileset dir="${shadow.lib.dir}" includes="shadow*.jar"/>
        <fileset dir="${lib.dir}" includes="*.jar"/>
        <fileset dir="${idea_home}">
            <include name="jre/lib/*.jar"/>
            <include name="jre/lib/ext/*.jar"/>
            <include name="lib/**/*.jar"/>
        </fileset>
    </path>

    <path id="test.classpath">
        <path refid="main.classpath"/>
        <pathelement location="${main.classes.dir}"/>
    </path>
    <path id="run.test.classpath">
        <path refid="test.classpath"/>
        <pathelement location="${test.classes.dir}"/>
    </path>

    <target name="clean" description="clean build result">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile" depends="clean" description="compile all code">
        <macro-compile srcdir="${main.src.dir}" destdir="${main.classes.dir}" classpathref="main.classpath"/>
        <macro-compile srcdir="${test.src.dir}" destdir="${test.classes.dir}" classpathref="test.classpath"/>
        <copy todir="${main.classes.dir}" overwrite="true">
            <fileset dir="${resources.dir}">
                <filename name="*.*"/>
            </fileset>
        </copy>
    </target>

    <target name="test" depends="compile" description="run tests">
        <mkdir dir="${test.output.dir}"/>
        <junit fork="true" printsummary="true" failureproperty="junit.failed" errorproperty="junit.failed">
            <classpath refid="run.test.classpath"/>
            <batchtest fork="yes" todir="${test.output.dir}">
                <fileset dir="${test.src.dir}">
                    <include name="/**/*Test.java"/>
                </fileset>
            </batchtest>
            <formatter type="plain" usefile="true"/>
        </junit>
        <fail if="junit.failed" message="One or more tests failed. See test output '${test.output.dir}' for details"/>
    </target>

    <target name="jar" depends="test" description="build fireworks jar">
        <jar file="${build.dir}/fireworks.jar">
            <fileset dir="${main.classes.dir}">
                <include name="**/*.*"/>
            </fileset>
            <fileset dir=".">
                <include name="LICENSE.TXT"/>
                <include name="META-INF/plugin.xml"/>
            </fileset>
        </jar>
    </target>

    <macrodef name="macro-compile">
        <attribute name="srcdir"/>
        <attribute name="destdir"/>
        <attribute name="classpathref"/>
        <sequential>
            <mkdir dir="@{destdir}"/>
            <javac srcdir="@{srcdir}" destdir="@{destdir}" includes="**/*.*" classpathref="@{classpathref}"
                   debug="true" encoding="UTF-8"/>
        </sequential>
    </macrodef>

</project>